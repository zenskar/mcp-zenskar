{
  "server": {
    "name": "zenskar-api-server",
    "baseUrl": "https://api.zenskar.com"
  },
  "tools": [
    {
      "name": "listCustomers",
      "description": "Retrieve a paginated list of customers, with options for searching, filtering by ID, external ID, email, phone number, communication status, auto-charge status, creation date, customer name, and business entity ID.",
      "args": [
        {
          "name": "cursor",
          "description": "The cursor for pagination to fetch the next or previous set of records.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of customers to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "search",
          "description": "General search query (e.g., 'name=john,custom_data.key=john@zenskar.com').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "order",
          "description": "Order of results (e.g., '-created_at' for descending creation date).",
          "type": "string",
          "required": false,
          "default": "-created_at",
          "position": "query"
        },
        {
          "name": "sortKey",
          "description": "Key to sort the results by (e.g., 'id').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "sortType",
          "description": "Sort order type (e.g., 'asc' for ascending).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "expand",
          "description": "Fields to expand in the response (e.g., 'contacts').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id",
          "description": "Filter by customer ID (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id__ilike",
          "description": "Case-insensitive partial match for customer ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id__in",
          "description": "Filter by a comma-separated list of customer IDs.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "external_id",
          "description": "Filter by external ID (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "external_id__ilike",
          "description": "Case-insensitive partial match for external ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "email",
          "description": "Filter by email (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "email__ilike",
          "description": "Case-insensitive partial match for email.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "phoneNumber__ilike",
          "description": "Case-insensitive partial match for phone number.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "communications_enabled",
          "description": "Filter by communications enabled status.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "auto_charge_enabled",
          "description": "Filter by auto-charge enabled status.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__gte",
          "description": "Filter by creation date greater than or equal to (ISO 8601 format).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__lte",
          "description": "Filter by creation date less than or equal to (ISO 8601 format).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customer_name__ilike",
          "description": "Case-insensitive partial match for customer name.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "business_entity_id",
          "description": "Filter by business entity ID (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__customer_id",
          "description": "Filter by invoice customer ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__status",
          "description": "Filter by invoice status.",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/customer",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Customer List\n\nHere is the list of customers based on your criteria:\n\n"
      }
    },
    {
      "name": "getCustomerById",
      "description": "Retrieve details for a specific customer by their ID.",
      "args": [
        {
          "name": "customerId",
          "description": "The unique ID of the customer to retrieve.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/customers/{customerId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Customer Details\n\nHere are the details for the requested customer:\n\n"
      }
    },
    {
      "name": "listContacts",
      "description": "Retrieve a paginated list of contacts.",
      "args": [
        {
          "name": "cursor",
          "description": "The cursor for pagination.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of contacts to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "sortKey",
          "description": "Key to sort the results by (e.g., 'id').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "sortType",
          "description": "Sort order type (e.g., 'asc').",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/contacts",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Contact List\n\nHere is the list of contacts:\n\n"
      }
    },
    {
      "name": "getContactById",
      "description": "Retrieve details for a specific contact by their ID.",
      "args": [
        {
          "name": "contactId",
          "description": "The unique ID of the contact to retrieve.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/contacts/{contactId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Contact Details\n\nHere are the details for the requested contact:\n\n"
      }
    },
    {
      "name": "listInvoices",
      "description": "Retrieve a paginated list of invoices, with options for filtering by customer, status, amounts, due date, creation date, and related customer/contract details.",
      "args": [
        {
          "name": "customerId",
          "description": "Filter invoices by a specific customer ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customerExternalId",
          "description": "Filter invoices by a customer's external ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "status",
          "description": "Filter invoices by their status (e.g., 'draft', 'approved', 'paid', 'void', 'partially_paid', 'upcoming').",
          "type": "string",
          "required": false,
          "position": "query",
          "enum": [
            "draft",
            "approved",
            "edited",
            "discarded",
            "paid",
            "void",
            "partially_paid",
            "upcoming"
          ]
        },
        {
          "name": "status__in",
          "description": "Filter invoices by multiple statuses (comma-separated, e.g., 'draft,approved,paid,partially_paid,upcoming,void').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "cursor",
          "description": "The cursor for pagination.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of invoices to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "contractId",
          "description": "Filter by contract ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "externalId",
          "description": "Filter by invoice external ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoiceTotal__gte",
          "description": "Filter by invoice total greater than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoiceTotal__lte",
          "description": "Filter by invoice total less than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "amountDue__gte",
          "description": "Filter by amount due greater than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "amountDue__lte",
          "description": "Filter by amount due less than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "dueDate__gte",
          "description": "Filter by due date greater than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "dueDate__lte",
          "description": "Filter by due date less than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "createdAt__gte",
          "description": "Filter by creation date greater than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "createdAt__lte",
          "description": "Filter by creation date less than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice_number__like",
          "description": "Partial match for invoice number.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customer__customer_name__ilike",
          "description": "Case-insensitive partial match for customer name associated with the invoice.",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/internal",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice List\n\nHere are the invoices matching your criteria:\n\n"
      }
    },
    {
      "name": "getInvoiceById",
      "description": "Retrieve details for a specific invoice by its ID.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The unique ID of the invoice to retrieve.",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "customerId",
          "description": "The ID of the customer associated with the invoice (optional).",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Details\n\nHere are the details for the requested invoice:\n\n"
      }
    },
    {
      "name": "getInvoiceGenerationStatus",
      "description": "Get the generation status of a specific invoice.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "contractId",
          "description": "The ID of the contract associated with the invoice.",
          "type": "string",
          "required": true,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/invoice_generation_status/{invoiceId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Generation Status\n\nDetails of the invoice generation status:\n\n"
      }
    },
    {
      "name": "getInvoiceByExternalId",
      "description": "Retrieve details for an invoice using its external ID.",
      "args": [
        {
          "name": "externalId",
          "description": "The external ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/external_id/{externalId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice by External ID\n\nDetails of the invoice retrieved by its external ID:\n\n"
      }
    },
    {
      "name": "downloadInvoice",
      "description": "Download an invoice in JSON format.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice to download.",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "invoiceJsonKey",
          "description": "Optional key for invoice JSON.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customerId",
          "description": "Optional customer ID associated with the invoice.",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}/download_invoice",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Download\n\nThe invoice content is:\n\n"
      }
    },
    {
      "name": "getInvoiceContractJsonActuals",
      "description": "Get contract actuals in JSON format for a specific invoice.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}/contract_json_actuals",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Contract JSON Actuals for Invoice\n\nHere are the contract actuals:\n\n"
      }
    },
    {
      "name": "getInvoicePayments",
      "description": "Get payments associated with a specific invoice.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}/payments",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Payments for Invoice\n\nHere are the payments for the specified invoice:\n\n"
      }
    },
    {
      "name": "generateInvoicePaymentLink",
      "description": "Generate a payment link for a specific invoice.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "amount",
          "description": "Custom amount to be charged for the invoice (must be less than the amount due).",
          "type": "integer",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}/payment_link",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Payment Link\n\nHere is the generated payment link:\n\n"
      }
    },
    {
      "name": "payInvoice",
      "description": "Initiate payment for an invoice using a payload.",
      "args": [
        {
          "name": "payload",
          "description": "The payment payload.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/pay/{payload}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Payment Status\n\nThe payment process was initiated:\n\n"
      }
    },
    {
      "name": "getInvoiceLineItems",
      "description": "Get details about the invoice line items, features, and pricing models.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}/line_items",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Line Items\n\nDetails of the invoice line items:\n\n"
      }
    },
    {
      "name": "getInvoiceSummary",
      "description": "Get a summary of a specific invoice.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/invoices/{invoiceId}/summary",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Summary\n\nHere is the summary for the specified invoice:\n\n"
      }
    },
    {
      "name": "getAllInvoiceTags",
      "description": "Get all available tags for invoices.",
      "args": [],
      "requestTemplate": {
        "url": "/invoices/tags",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## All Invoice Tags\n\nHere is a list of all defined invoice tags:\n\n"
      }
    },
    {
      "name": "getCustomerPortalConfiguration",
      "description": "Retrieve the customer portal configuration.",
      "args": [],
      "requestTemplate": {
        "url": "/customer_portal/configuration",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Customer Portal Configuration\n\nHere is the customer portal configuration:\n\n"
      }
    },
    {
      "name": "listAggregates",
      "description": "Get billable metrics in paginated form with options for filtering by ID, name, and data source.",
      "args": [
        {
          "name": "cursor",
          "description": "The cursor for pagination.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of records to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "order",
          "description": "Order of results (e.g., '-created_at').",
          "type": "string",
          "required": false,
          "default": "-created_at",
          "position": "query"
        },
        {
          "name": "sortKey",
          "description": "Key to sort the results by (e.g., 'id').",
          "type": "string",
          "required": false,
          "default": "created_at",
          "position": "query"
        },
        {
          "name": "sortType",
          "description": "Sort order type (e.g., 'asc').",
          "type": "string",
          "required": false,
          "default": "DESC",
          "position": "query"
        },
        {
          "name": "id",
          "description": "Filter by aggregate ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "name__ilike",
          "description": "Case-insensitive partial match for aggregate name.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "datasource",
          "description": "Filter by data source ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "createdAt__gte",
          "description": "Filter by creation date greater than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/aggregates",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Billable Metrics List\n\nHere is the list of billable metrics:\n\n"
      }
    },
    {
      "name": "getAggregateSchemas",
      "description": "Get all billable metric schemas belonging to an organization.",
      "args": [],
      "requestTemplate": {
        "url": "/aggregates/tables/schema",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Billable Metric Schemas\n\nHere are the schemas for billable metrics:\n\n"
      }
    },
    {
      "name": "getAggregateEstimates",
      "description": "Get billable metric estimates based on the specified criteria.",
      "args": [
        {
          "name": "aggregateId",
          "description": "The ID of the billable metric.",
          "type": "string",
          "required": true,
          "position": "query"
        },
        {
          "name": "customerId",
          "description": "The ID of the customer.",
          "type": "string",
          "required": true,
          "position": "query"
        },
        {
          "name": "startDate",
          "description": "Start date of the estimate (YYYY-MM-DD).",
          "type": "string",
          "required": true,
          "position": "query"
        },
        {
          "name": "endDate",
          "description": "End date of the estimate (YYYY-MM-DD).",
          "type": "string",
          "required": true,
          "position": "query"
        },
        {
          "name": "getSingle",
          "description": "Whether to get a single estimate (defaults to true).",
          "type": "boolean",
          "required": false,
          "default": true,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/aggregates/estimates",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Billable Metric Estimates\n\nHere are the estimates for the billable metric:\n\n"
      }
    },
    {
      "name": "getAggregateById",
      "description": "Get the details of a billable metric by its ID.",
      "args": [
        {
          "name": "aggregateId",
          "description": "The ID of the billable metric.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/aggregates/{aggregateId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Billable Metric Details\n\nHere are the details for the specified billable metric:\n\n"
      }
    },
    {
      "name": "getAggregateLogs",
      "description": "Get the logs related to a billable metric by its ID, with optional date and customer filters.",
      "args": [
        {
          "name": "aggregateId",
          "description": "The ID of the billable metric.",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "startDate",
          "description": "Start date for filtering logs (YYYY-MM-DD).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "endDate",
          "description": "End date for filtering logs (YYYY-MM-DD).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "month",
          "description": "Filter by month (e.g., 'Apr 2023').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customerId",
          "description": "Filter by customer ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "queryLimit",
          "description": "Limit the number of log entries (defaults to 100).",
          "type": "integer",
          "required": false,
          "default": 100,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/aggregates/logs/{aggregateId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Billable Metric Logs\n\nHere are the logs for the specified billable metric:\n\n"
      }
    },
    {
      "name": "listRawMetrics",
      "description": "Get usage events in paginated form, with options for filtering by ID, name, and API slug.",
      "args": [
        {
          "name": "cursor",
          "description": "The cursor for pagination.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of records to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "order",
          "description": "Order of results (e.g., '-created_at').",
          "type": "string",
          "required": false,
          "default": "-created_at",
          "position": "query"
        },
        {
          "name": "sortKey",
          "description": "Key to sort the results by (e.g., 'created_at').",
          "type": "string",
          "required": false,
          "default": "created_at",
          "position": "query"
        },
        {
          "name": "sortType",
          "description": "Sort order type (e.g., 'asc').",
          "type": "string",
          "required": false,
          "default": "DESC",
          "position": "query"
        },
        {
          "name": "search",
          "description": "General search query.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id",
          "description": "Filter by usage event ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "name__ilike",
          "description": "Case-insensitive partial match for usage event name.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "api_slug__ilike",
          "description": "Case-insensitive partial match for API slug.",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/rawmetric",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Usage Events List\n\nHere is the list of usage events:\n\n"
      }
    },
    {
      "name": "createRawMetric",
      "description": "Create a new raw metric (usage event schema) with column definitions and connectors.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Create Raw Metric",
        "description": "This will create a new raw metric and provision its event schema. Please review the payload carefully.",
        "warningText": "Ensure the dataschema and slug values are correct before continuing.",
        "confirmText": "Create Raw Metric",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "name",
          "api_slug",
          "dataschema",
          "column_order"
        ]
      },
      "args": [
        {
          "name": "name",
          "description": "Human-friendly name for the raw metric.",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "api_slug",
          "description": "API slug used when ingesting events (lowercase, underscores).",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "connector",
          "description": "Connector that owns this raw metric (e.g., push_to_zenskar).",
          "type": "string",
          "required": true,
          "position": "body",
          "default": "push_to_zenskar"
        },
        {
          "name": "api_type",
          "description": "API type for ingestion (typically PUSH).",
          "type": "string",
          "required": false,
          "position": "body",
          "default": "PUSH"
        },
        {
          "name": "dataschema",
          "description": "Data schema of raw metric (JSON object). Structure: {\"data\": {custom_fields}, \"timestamp\": \"DateTime64\", \"customer_id\": \"String\"}. The 'data' map must include only valid ClickHouse types (String, Int64, Float64, Date32, DateTime64, UUID, Bool).",
          "type": "object",
          "required": true,
          "position": "body",
          "default": {
            "customer_id": "String",
            "timestamp": "DateTime64",
            "data": {
              "String": "String",
              "Int64": "Int64",
              "Float64": "Float64",
              "Date32": "Date32",
              "DateTime64": "DateTime64",
              "UUID": "UUID",
              "Bool": "Bool"
            }
          }
        },
        {
          "name": "column_order",
          "description": "Optional ordered list of columns for downstream processing.",
          "type": "array",
          "required": false,
          "position": "body",
          "default": [
            "timestamp"
          ]
        }
      ],
      "requestTemplate": {
        "url": "/rawmetric",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json",
          "apiversion": "20240301"
        }
      },
      "responseTemplate": {
        "prependBody": "## Raw Metric Created\n\nThe raw metric was created successfully:\n\n"
      }
    },
    {
      "name": "getRawMetricById",
      "description": "Get usage event details by its ID.",
      "args": [
        {
          "name": "rawMetricId",
          "description": "The ID of the raw metric.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/rawmetric/{rawMetricId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Usage Event Details\n\nHere are the details for the specified usage event:\n\n"
      }
    },
    {
      "name": "getRawMetricLogs",
      "description": "Get logs for a specific raw metric by its ID.",
      "args": [
        {
          "name": "rawMetricId",
          "description": "The ID of the raw metric.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/rawmetric/{rawMetricId}/logs",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Usage Event Logs\n\nHere are the logs for the specified usage event:\n\n"
      }
    },
    {
      "name": "getRawMetricBySlug",
      "description": "Get usage event details by its API slug.",
      "args": [
        {
          "name": "rawMetricSlug",
          "description": "The API slug of the raw metric.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/rawmetric/slug/{rawMetricSlug}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Usage Event by Slug\n\nHere are the details for the usage event with the specified slug:\n\n"
      }
    },
    {
      "name": "getInvoicePaymentsById",
      "description": "Get payments associated with a specific invoice ID.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/payments/invoice/{invoiceId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Payments for Invoice\n\nHere are the payments for the specified invoice:\n\n"
      }
    },
    {
      "name": "getInvoicePaymentsWithoutRefunds",
      "description": "Get payments for an invoice, excluding refunds.",
      "args": [
        {
          "name": "invoiceId",
          "description": "The ID of the invoice.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/payments/invoice/{invoiceId}/without_refunds",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Invoice Payments (Excluding Refunds)\n\nHere are the payments for the specified invoice, excluding refunds:\n\n"
      }
    },
    {
      "name": "getPaymentById",
      "description": "Retrieve details for a specific payment by its ID.",
      "args": [
        {
          "name": "paymentId",
          "description": "The unique ID of the payment to retrieve.",
          "type": "string",
          "required": true,
          "position": "path"
        }
      ],
      "requestTemplate": {
        "url": "/payments/{paymentId}",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Payment Details\n\nHere are the details for the requested payment:\n\n"
      }
    },
    {
      "name": "getCurrentDateTime",
      "description": "Get the current system date and time in multiple formats for temporal context",
      "args": [],
      "requestTemplate": {
        "url": "/system/datetime",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Current Date and Time\n\nSystem date/time information:\n\n"
      }
    },
    {
      "name": "listAllPayments",
      "description": "Retrieve a paginated list of all payments, with extensive filtering and sorting options.",
      "args": [
        {
          "name": "cursor",
          "description": "The cursor for pagination.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of payments to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "search",
          "description": "General search query.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "sortKey",
          "description": "Key to sort the results by (e.g., 'id').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "sortType",
          "description": "Sort order type (e.g., 'asc').",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "order",
          "description": "Order of results (e.g., '-created_at').",
          "type": "string",
          "required": false,
          "default": "-created_at",
          "position": "query"
        },
        {
          "name": "id",
          "description": "Filter by payment ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customerId",
          "description": "Filter by customer ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "connectorId",
          "description": "Filter by connector ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "externalId__ilike",
          "description": "Case-insensitive partial match for external ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "paymentMethod",
          "description": "Filter by payment method (e.g., 'card', 'cash', 'bank_transfer').",
          "type": "string",
          "required": false,
          "position": "query",
          "enum": [
            "card",
            "cash",
            "check",
            "charge_back",
            "bank_transfer",
            "direct_debit",
            "amazon_payments",
            "paypal_express_checkout",
            "upi",
            "netbanking_emandates",
            "other",
            "credits",
            "ach_credit_transfer"
          ]
        },
        {
          "name": "type",
          "description": "Filter by payment type (e.g., 'payment', 'refund').",
          "type": "string",
          "required": false,
          "position": "query",
          "enum": [
            "payment",
            "refund",
            "payment_reversal",
            "authorization",
            "tax_withheld"
          ]
        },
        {
          "name": "amount__gte",
          "description": "Filter by amount greater than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "amount__lte",
          "description": "Filter by amount less than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "amount_refunded__gte",
          "description": "Filter by amount refunded greater than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "amount_refunded__lte",
          "description": "Filter by amount refunded less than or equal to.",
          "type": "number",
          "required": false,
          "position": "query"
        },
        {
          "name": "currencyCode__ilike",
          "description": "Case-insensitive partial match for currency code.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "receiptNumber__ilike",
          "description": "Case-insensitive partial match for receipt number.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "status",
          "description": "Filter by payment status (e.g., 'success', 'failed').",
          "type": "string",
          "required": false,
          "position": "query",
          "enum": [
            "in_progress",
            "requires_action",
            "pending_charge",
            "authorized",
            "created",
            "success",
            "voided",
            "failed",
            "canceled",
            "refunded",
            "partially_refunded",
            "other"
          ]
        },
        {
          "name": "autocharge",
          "description": "Filter by auto-charge status.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "parentId",
          "description": "Filter by parent payment ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "timestamp__gte",
          "description": "Filter by timestamp greater than or equal to (Unix time).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "timestamp__lte",
          "description": "Filter by timestamp less than or equal to (Unix time).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "createdAt__gte",
          "description": "Filter by creation date greater than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "createdAt__lte",
          "description": "Filter by creation date less than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__id",
          "description": "Filter by associated invoice ID.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__bill_for_date__gte",
          "description": "Filter by invoice billing date greater than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__bill_for_date__lte",
          "description": "Filter by invoice billing date less than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__approved_at__gte",
          "description": "Filter by invoice approval date greater than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "invoice__approved_at__lte",
          "description": "Filter by invoice approval date less than or equal to (ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customer__business_entity_id",
          "description": "Filter by customer's business entity ID.",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/payments",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## All Payments List\n\nHere is a comprehensive list of payments based on your criteria:\n\n"
      }
    },
    {
      "name": "createContractPrompt",
      "description": "Create a new contract prompt and save it to the system.",
      "needsApproval": false,
      "approvalConfig": {
        "title": "Create Contract Prompt",
        "description": "This will create a new AI contract prompt. Please verify the prompt content.",
        "warningText": "This will save a new contract prompt that may be used for AI-generated content.",
        "confirmText": "Create Prompt",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "prompt_name",
          "prompt_text",
          "document_id"
        ]
      },
      "args": [
        {
          "name": "prompt_name",
          "description": "A name for the prompt (required by API).",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "prompt_text",
          "description": "The prompt text to save.",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "document_id",
          "description": "The ID of the contract document this prompt is for.",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "prompt_schema",
          "description": "Optional schema for the prompt (e.g., 'billing_schema'). Can be null.",
          "type": [
            "string",
            "null"
          ],
          "required": false,
          "position": "body"
        }
      ],
      "requestTemplate": {
        "url": "/ai/contracts/prompts",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "responseTemplate": {
        "prependBody": "## Contract Prompt Created\n\nPrompt has been saved successfully:\n\n"
      }
    },
    {
      "name": "listContracts",
      "description": "Retrieve a paginated list of contracts, with extensive options for filtering by ID, customer ID, name, start date, end date, creation date, and status.",
      "args": [
        {
          "name": "cursor",
          "description": "The cursor for pagination to fetch the next or previous set of records.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "limit",
          "description": "Maximum number of records to return per page (defaults to 10).",
          "type": "integer",
          "required": false,
          "position": "query"
        },
        {
          "name": "order",
          "description": "Order of results (e.g., '-created_at' for descending creation date).",
          "type": "string",
          "required": false,
          "default": "-created_at",
          "position": "query"
        },
        {
          "name": "id",
          "description": "Filter by Contract ID (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id__ilike",
          "description": "Contract ID (case-insensitive partial match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id__like",
          "description": "Contract ID (case-sensitive partial match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id__in",
          "description": "Filter by a comma-separated list of Contract IDs.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "id__isnull",
          "description": "Filter by whether Contract ID is null.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "customer_id",
          "description": "Filter by Customer ID (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customer_id__in",
          "description": "Filter by a comma-separated list of Customer IDs.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "customer_id__isnull",
          "description": "Filter by whether Customer ID is null.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "name",
          "description": "Filter by Contract Name (exact match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "name__ilike",
          "description": "Contract Name (case-insensitive partial match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "name__like",
          "description": "Contract Name (case-sensitive partial match).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "name__in",
          "description": "Filter by a comma-separated list of Contract Names.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "name__isnull",
          "description": "Filter by whether Contract Name is null.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date",
          "description": "Contract Start Date (exact match, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__neq",
          "description": "Contract Start Date (not equal, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__gt",
          "description": "Contract Start Date (greater than, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__gte",
          "description": "Contract Start Date (greater than or equal to, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__lt",
          "description": "Contract Start Date (less than, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__lte",
          "description": "Contract Start Date (less than or equal to, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__isnull",
          "description": "Filter by whether Contract Start Date is null.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "start_date__in",
          "description": "Filter by a comma-separated list of Contract Start Dates.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at",
          "description": "Contract Created At (exact match, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__neq",
          "description": "Contract Created At (not equal, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__gt",
          "description": "Contract Created At (greater than, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__gte",
          "description": "Contract Created At (greater than or equal to, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__lt",
          "description": "Contract Created At (less than, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__lte",
          "description": "Contract Created At (less than or equal to, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__isnull",
          "description": "Filter by whether Contract Created At is null.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "created_at__in",
          "description": "Filter by a comma-separated list of Contract Creation Dates.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date",
          "description": "Contract End Date (exact match, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__neq",
          "description": "Contract End Date (not equal, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__gt",
          "description": "Contract End Date (greater than, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__gte",
          "description": "Contract End Date (greater than or equal to, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__lt",
          "description": "Contract End Date (less than, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__lte",
          "description": "Contract End Date (less than or equal to, ISO 8601).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__isnull",
          "description": "Filter by whether Contract End Date is null.",
          "type": "boolean",
          "required": false,
          "position": "query"
        },
        {
          "name": "end_date__in",
          "description": "Filter by a comma-separated list of Contract End Dates.",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "status",
          "description": "Filter contracts by their status.",
          "type": "string",
          "required": false,
          "position": "query",
          "enum": [
            "draft",
            "active",
            "paused",
            "expired",
            "disputed"
          ]
        },
        {
          "name": "status__in",
          "description": "Filter by a comma-separated list of contract statuses.",
          "type": "string",
          "required": false,
          "position": "query"
        }
      ],
      "requestTemplate": {
        "url": "/contract_v2",
        "method": "GET"
      },
      "responseTemplate": {
        "prependBody": "## Contract List\n\nHere is the list of contracts based on your criteria:\n\n"
      }
    },
    {
      "name": "createEntitlement",
      "description": "Creates a new entitlement in the system with various attributes including name, description, type, units, and product association.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Create New Entitlement",
        "description": "This will create a new entitlement in your system. Please review the details carefully.",
        "warningText": "This action will create a new entitlement record that may affect billing and access control.",
        "confirmText": "Create Entitlement",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "name",
          "description",
          "product_id"
        ]
      },
      "args": [
        {
          "name": "name",
          "description": "Entitlement name (required).",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "description",
          "description": "Entitlement description (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "entitlement_type",
          "description": "Type of entitlement (e.g., 'Quantity', 'Feature', 'Access').",
          "type": "string",
          "required": false,
          "position": "body",
          "enum": [
            "Quantity",
            "Feature",
            "Access"
          ]
        },
        {
          "name": "units",
          "description": "Units for the entitlement (e.g., 'units', 'GB', 'users').",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "is_active",
          "description": "Whether the entitlement is active (defaults to true).",
          "type": "boolean",
          "required": false,
          "default": true,
          "position": "body"
        },
        {
          "name": "product_id",
          "description": "Associated product ID (UUID format, optional).",
          "type": "string",
          "required": false,
          "position": "body"
        }
      ],
      "requestTemplate": {
        "url": "/entitlements",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "responseTemplate": {
        "prependBody": "## Entitlement Created\n\nNew entitlement has been successfully created:\n\n"
      }
    },
    {
      "name": "approveInvoice",
      "description": "Approves an invoice. This changes the invoice status to approved and may trigger billing processes.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Approve Invoice",
        "description": "This will approve the specified invoice without sending email notification. Please review the invoice details carefully.",
        "warningText": "This action will approve the invoice and may trigger billing processes. This cannot be easily undone.",
        "confirmText": "Approve Invoice",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "invoiceId",
          "customer_id",
          "actor"
        ]
      },
      "args": [
        {
          "name": "invoiceId",
          "description": "The unique ID of the invoice to approve (required).",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "send_email",
          "description": "Whether to send email notification (defaults to false).",
          "type": "boolean",
          "required": false,
          "default": false,
          "position": "query"
        },
        {
          "name": "check_duplicate_invoice",
          "description": "Whether to check for duplicate invoices (defaults to true).",
          "type": "boolean",
          "required": false,
          "default": true,
          "position": "body"
        }
      ],
      "requestTemplate": {
        "url": "/invoice/{invoiceId}/approve",
        "method": "PATCH",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "responseTemplate": {
        "prependBody": "## Invoice Approved\n\nThe invoice has been successfully approved:\n\n"
      }
    },
    {
      "name": "recogniseRevenue",
      "description": "Recognizes revenue for the organization up to a specified end date. This triggers revenue recognition processing for all eligible transactions.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Recognise Revenue",
        "description": "This will trigger revenue recognition processing up to the specified end date. Please review the date carefully.",
        "warningText": "This action will process revenue recognition which may affect financial reporting and accounting records.",
        "confirmText": "Recognise Revenue",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "end_date"
        ]
      },
      "args": [
        {
          "name": "end_date",
          "description": "End date for revenue recognition in YYYY-MM-DD format (required).",
          "type": "string",
          "required": true,
          "position": "body"
        }
      ],
      "requestTemplate": {
        "url": "/revenue_recognition_v3/recognise-revenue",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "responseTemplate": {
        "prependBody": "## Revenue Recognition\n\nRevenue recognition has been processed successfully:\n\n"
      }
    },
    {
      "name": "createBusinessEntity",
      "description": "Creates a new business entity in the system with various attributes including name, address, contact details, tax configuration, and logo.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Create New Business Entity",
        "description": "This will create a new business entity in your system. Please review the details carefully.",
        "warningText": "This action will create a new business entity record that may affect billing and organizational structure.",
        "confirmText": "Create Business Entity",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "name",
          "email",
          "phone_number",
          "address"
        ]
      },
      "args": [
        {
          "name": "name",
          "description": "Business Entity Name (required).",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "email",
          "description": "Business Entity email address (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "phone_number",
          "description": "Business Entity phone number with country code (Required).",
          "type": "string",
          "required": true,
          "position": "body",
          "default": "+911234567890"
        },
        {
          "name": "is_default",
          "description": "Whether this is the default business entity (defaults to false).",
          "type": "boolean",
          "required": false,
          "default": false,
          "position": "body"
        },
        {
          "name": "logo_url",
          "description": "Business Entity logo URL (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "tax_config",
          "description": "Business Entity tax configuration as JSON object (optional).",
          "type": "object",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_line1",
          "description": "Address line 1 (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_line2",
          "description": "Address line 2 (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_line3",
          "description": "Address line 3 (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_city",
          "description": "Address city (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_state",
          "description": "Address state (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_zipCode",
          "description": "Address zip code (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_country",
          "description": "Address country (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        }
      ],
      "requestTemplate": {
        "url": "/business_entities",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "responseTemplate": {
        "prependBody": "## Business Entity Created\n\nNew business entity has been successfully created:\n\n"
      }
    },
    {
      "name": "createCustomer",
      "description": "Creates a new customer in the system with various attributes including address, tax info, and contact details.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Create New Customer",
        "description": "This will create a new customer in your system. Please review the details carefully.",
        "warningText": "This action will create a new customer record in your system.",
        "confirmText": "Create Customer",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "customer_name",
          "email",
          "phone_number"
        ]
      },
      "args": [
        {
          "name": "external_id",
          "description": "External customer ID (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "customer_name",
          "description": "Customer name (required).",
          "type": "string",
          "required": true,
          "position": "body"
        },
        {
          "name": "email",
          "description": "Customer primary email address (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "phone_number",
          "description": "Customer phone number (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_line1",
          "description": "Address line 1 (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_line2",
          "description": "Address line 2 (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_city",
          "description": "Address city (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_state",
          "description": "Address state (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_zipCode",
          "description": "Address zip code (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_country",
          "description": "Address country (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "address_country_code",
          "description": "Address country code (optional).",
          "type": "string",
          "required": false,
          "position": "body"
        },
        {
          "name": "communications_enabled",
          "description": "Enable/disable communications (defaults to true).",
          "type": "boolean",
          "required": false,
          "position": "body"
        },
        {
          "name": "auto_charge_enabled",
          "description": "Enable/disable auto-charge (defaults to true).",
          "type": "boolean",
          "required": false,
          "position": "body"
        },
        {
          "name": "business_entity_id",
          "description": "Business entity ID (UUID format, optional).",
          "type": "string",
          "required": false,
          "position": "body"
        }
      ],
      "requestTemplate": {
        "url": "/customers",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "responseTemplate": {
        "prependBody": "## Customer Created\n\nNew customer has been successfully created:\n\n"
      }
    },
    {
      "name": "ingestRawMetricEvent",
      "description": "Ingest a usage event for the specified raw metric slug.",
      "needsApproval": true,
      "approvalConfig": {
        "title": "Ingest Usage Event",
        "description": "This will ingest a usage event for the selected raw metric. Review the payload carefully.",
        "warningText": "Ensure the data payload matches the raw metric schema before proceeding.",
        "confirmText": "Ingest Usage Event",
        "cancelText": "Cancel",
        "sensitiveFields": [
          "rawMetricSlug",
          "event",
          "key"
        ]
      },
      "args": [
        {
          "name": "rawMetricSlug",
          "description": "Slug of the raw metric (e.g., api_usage_events).",
          "type": "string",
          "required": true,
          "position": "path"
        },
        {
          "name": "key",
          "description": "Request key used for idempotency / replay protection (maps to ?key=).",
          "type": "string",
          "required": false,
          "position": "query"
        },
        {
          "name": "event",
          "description": "Usage event payload containing customer_id, timestamp, and data map with schema-compliant types.",
          "type": "object",
          "required": true,
          "position": "body",
          "default": {
            "customer_id": "example_customer",
            "timestamp": "2025-01-01 00:00:00",
            "data": {
              "String": "sample value",
              "Int64": 10,
              "Float64": 42.5,
              "Date32": "2025-01-01",
              "DateTime64": "2025-01-01 12:00:00",
              "UUID": "00000000-0000-0000-0000-000000000000",
              "Bool": true
            }
          }
        }
      ],
      "requestTemplate": {
        "url": "/usage/{rawMetricSlug}",
        "method": "POST",
        "headers": {
          "Content-Type": "application/json",
          "apiversion": "20240301"
        }
      },
      "responseTemplate": {
        "prependBody": "## Usage Event Ingested\n\nThe usage event was ingested successfully:\n\n"
      }
    }
  ]
}
